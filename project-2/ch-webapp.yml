Description: Challenge no.3
Parameters:
  EnvironmentName:
    Description: An environment name that will be prefixed to resource names
    Type: String
  AmiID:
    Description: AMI image to be used
    Type: AWS::EC2::Image::Id
  KeyPair:
    Description: KeyPair for SSH connection
    Type: AWS::EC2::KeyPair::KeyName
  MinAsgSize:
    Description: Min ASG size
    Type: String
  MaxAsgSize:
    Description: Max ASG size
    Type: String
  AsgCapacity:
    Description: ASG target size
    Type: String
Resources:
  WebAppSecurityGroup:
    Type: AWS::EC2::SecurityGroup
    Properties:
      GroupDescription: Security group for webserver
      VpcId:
        Fn::ImportValue: 
          !Sub "${EnvironmentName}-VPCID"
      SecurityGroupIngress:
      - IpProtocol: tcp
        FromPort: 80
        ToPort: 80
        CidrIp: 0.0.0.0/0
      # - IpProtocol: tcp
      #   FromPort: 22
      #   ToPort: 22
      #   CidrIp: 0.0.0.0/0
      SecurityGroupEgress:
      - IpProtocol: tcp
        FromPort: 0
        ToPort: 65535
        CidrIp: 0.0.0.0/0
      Tags: 
        - Key: Name 
          Value: !Sub ${EnvironmentName}-WEBAPP-SG
  WebAppIamRole:
    Type: AWS::IAM::Role
    Properties: 
      RoleName: !Sub ${EnvironmentName}-WEBAPP-IAM-ROLE
      AssumeRolePolicyDocument:
        Version: 2012-10-17
        Statement:
        - Effect: Allow
          Principal:
            Service:
            - ec2.amazonaws.com
          Action:
            - 'sts:AssumeRole'
      ManagedPolicyArns:
        - 'arn:aws:iam::aws:policy/AmazonSSMManagedInstanceCore'
      Path: /
  WebAppIamPolicy:
    Type: 'AWS::IAM::Policy'
    Properties:
      PolicyName: !Sub ${EnvironmentName}-WEBAPP-IAM-POLICY
      PolicyDocument:
        Statement:
        - Effect: Allow
          Action:
          - 'ssm:*'
          Resource: '*'
      Roles:
        - !Ref WebAppIamRole
  WebAppIamProfile:
    Type: AWS::IAM::InstanceProfile
    Properties: 
      InstanceProfileName: !Sub ${EnvironmentName}-WEBAPP-IAM-PROF
      Path: /
      Roles: 
        - !Ref WebAppIamRole
  WebAppLaunchTemplate:
      Type: AWS::EC2::LaunchTemplate
      Properties: 
          LaunchTemplateName: !Sub ${EnvironmentName}-WEBAPP-LT
          LaunchTemplateData:
            UserData:
              Fn::Base64: !Sub |
                #!/bin/bash
                apt-get update -y
                apt-get install apache2 -y
                systemctl start apache2.service
                cd /var/www/html
                echo "Udacity Demo Web Server Up and Running!" > index.html
            ImageId: !Ref AmiID
            KeyName: !Ref KeyPair
            IamInstanceProfile: 
              Name: !Ref WebAppIamProfile
            SecurityGroupIds:
              - !Ref WebAppSecurityGroup
            InstanceType: t3.small
            BlockDeviceMappings:
            - DeviceName: "/dev/sdk"
              Ebs:
                VolumeSize: 10
  WebAppTargetGroup:
    Type: AWS::ElasticLoadBalancingV2::TargetGroup
    Properties:
      HealthCheckIntervalSeconds: 10
      HealthCheckPath: /
      HealthCheckProtocol: HTTP
      HealthCheckTimeoutSeconds: 8
      HealthyThresholdCount: 2
      Port: 80
      Protocol: HTTP
      UnhealthyThresholdCount: 5
      VpcId: 
        Fn::ImportValue:
          Fn::Sub: "${EnvironmentName}-VPCID"
  WebAppAsg:
    Type: AWS::AutoScaling::AutoScalingGroup
    Properties:
      VPCZoneIdentifier:
      - Fn::ImportValue: 
          !Sub "${EnvironmentName}-PRIV-NETS"
      LaunchTemplate:
          LaunchTemplateId: !Ref WebAppLaunchTemplate
          Version: !GetAtt WebAppLaunchTemplate.LatestVersionNumber
      MinSize: !Ref MinAsgSize
      DesiredCapacity: !Ref AsgCapacity
      MaxSize: !Ref MaxAsgSize
      TargetGroupARNs:
      - !Ref WebAppTargetGroup
      HealthCheckGracePeriod: 60
      HealthCheckType: ELB
      Tags: 
        - Key: Name 
          Value: !Sub ${EnvironmentName}-WEBAPP
          PropagateAtLaunch: true
  
# Outputs: 
#   EC2SecurityGroup:
#     Description: Security Group of ec2 server
#     Value: !Ref SecurityGroup
#     Export:
#       Name: !Sub ${EnvironmentName}-EC2-SG
  